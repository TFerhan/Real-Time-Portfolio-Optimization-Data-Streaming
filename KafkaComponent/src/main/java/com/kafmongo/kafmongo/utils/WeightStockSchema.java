/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kafmongo.kafmongo.utils;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class WeightStockSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4150276358804763178L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WeightStockSchema\",\"namespace\":\"com.kafmongo.kafmongo.utils\",\"fields\":[{\"name\":\"time\",\"type\":\"string\"},{\"name\":\"portfolio_id\",\"type\":\"string\"},{\"name\":\"ticker\",\"type\":\"string\"},{\"name\":\"weight\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<WeightStockSchema> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<WeightStockSchema> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<WeightStockSchema> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<WeightStockSchema> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<WeightStockSchema> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this WeightStockSchema to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a WeightStockSchema from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a WeightStockSchema instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static WeightStockSchema fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence time;
  private java.lang.CharSequence portfolio_id;
  private java.lang.CharSequence ticker;
  private java.lang.CharSequence weight;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public WeightStockSchema() {}

  /**
   * All-args constructor.
   * @param time The new value for time
   * @param portfolio_id The new value for portfolio_id
   * @param ticker The new value for ticker
   * @param weight The new value for weight
   */
  public WeightStockSchema(java.lang.CharSequence time, java.lang.CharSequence portfolio_id, java.lang.CharSequence ticker, java.lang.CharSequence weight) {
    this.time = time;
    this.portfolio_id = portfolio_id;
    this.ticker = ticker;
    this.weight = weight;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return time;
    case 1: return portfolio_id;
    case 2: return ticker;
    case 3: return weight;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: time = (java.lang.CharSequence)value$; break;
    case 1: portfolio_id = (java.lang.CharSequence)value$; break;
    case 2: ticker = (java.lang.CharSequence)value$; break;
    case 3: weight = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'time' field.
   * @return The value of the 'time' field.
   */
  public java.lang.CharSequence getTime() {
    return time;
  }


  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(java.lang.CharSequence value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'portfolio_id' field.
   * @return The value of the 'portfolio_id' field.
   */
  public java.lang.CharSequence getPortfolioId() {
    return portfolio_id;
  }


  /**
   * Sets the value of the 'portfolio_id' field.
   * @param value the value to set.
   */
  public void setPortfolioId(java.lang.CharSequence value) {
    this.portfolio_id = value;
  }

  /**
   * Gets the value of the 'ticker' field.
   * @return The value of the 'ticker' field.
   */
  public java.lang.CharSequence getTicker() {
    return ticker;
  }


  /**
   * Sets the value of the 'ticker' field.
   * @param value the value to set.
   */
  public void setTicker(java.lang.CharSequence value) {
    this.ticker = value;
  }

  /**
   * Gets the value of the 'weight' field.
   * @return The value of the 'weight' field.
   */
  public java.lang.CharSequence getWeight() {
    return weight;
  }


  /**
   * Sets the value of the 'weight' field.
   * @param value the value to set.
   */
  public void setWeight(java.lang.CharSequence value) {
    this.weight = value;
  }

  /**
   * Creates a new WeightStockSchema RecordBuilder.
   * @return A new WeightStockSchema RecordBuilder
   */
  public static com.kafmongo.kafmongo.utils.WeightStockSchema.Builder newBuilder() {
    return new com.kafmongo.kafmongo.utils.WeightStockSchema.Builder();
  }

  /**
   * Creates a new WeightStockSchema RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new WeightStockSchema RecordBuilder
   */
  public static com.kafmongo.kafmongo.utils.WeightStockSchema.Builder newBuilder(com.kafmongo.kafmongo.utils.WeightStockSchema.Builder other) {
    if (other == null) {
      return new com.kafmongo.kafmongo.utils.WeightStockSchema.Builder();
    } else {
      return new com.kafmongo.kafmongo.utils.WeightStockSchema.Builder(other);
    }
  }

  /**
   * Creates a new WeightStockSchema RecordBuilder by copying an existing WeightStockSchema instance.
   * @param other The existing instance to copy.
   * @return A new WeightStockSchema RecordBuilder
   */
  public static com.kafmongo.kafmongo.utils.WeightStockSchema.Builder newBuilder(com.kafmongo.kafmongo.utils.WeightStockSchema other) {
    if (other == null) {
      return new com.kafmongo.kafmongo.utils.WeightStockSchema.Builder();
    } else {
      return new com.kafmongo.kafmongo.utils.WeightStockSchema.Builder(other);
    }
  }

  /**
   * RecordBuilder for WeightStockSchema instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WeightStockSchema>
    implements org.apache.avro.data.RecordBuilder<WeightStockSchema> {

    private java.lang.CharSequence time;
    private java.lang.CharSequence portfolio_id;
    private java.lang.CharSequence ticker;
    private java.lang.CharSequence weight;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.kafmongo.kafmongo.utils.WeightStockSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.time)) {
        this.time = data().deepCopy(fields()[0].schema(), other.time);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.portfolio_id)) {
        this.portfolio_id = data().deepCopy(fields()[1].schema(), other.portfolio_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.ticker)) {
        this.ticker = data().deepCopy(fields()[2].schema(), other.ticker);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.weight)) {
        this.weight = data().deepCopy(fields()[3].schema(), other.weight);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing WeightStockSchema instance
     * @param other The existing instance to copy.
     */
    private Builder(com.kafmongo.kafmongo.utils.WeightStockSchema other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.time)) {
        this.time = data().deepCopy(fields()[0].schema(), other.time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.portfolio_id)) {
        this.portfolio_id = data().deepCopy(fields()[1].schema(), other.portfolio_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ticker)) {
        this.ticker = data().deepCopy(fields()[2].schema(), other.ticker);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.weight)) {
        this.weight = data().deepCopy(fields()[3].schema(), other.weight);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'time' field.
      * @return The value.
      */
    public java.lang.CharSequence getTime() {
      return time;
    }


    /**
      * Sets the value of the 'time' field.
      * @param value The value of 'time'.
      * @return This builder.
      */
    public com.kafmongo.kafmongo.utils.WeightStockSchema.Builder setTime(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.time = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'time' field has been set.
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'time' field.
      * @return This builder.
      */
    public com.kafmongo.kafmongo.utils.WeightStockSchema.Builder clearTime() {
      time = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'portfolio_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getPortfolioId() {
      return portfolio_id;
    }


    /**
      * Sets the value of the 'portfolio_id' field.
      * @param value The value of 'portfolio_id'.
      * @return This builder.
      */
    public com.kafmongo.kafmongo.utils.WeightStockSchema.Builder setPortfolioId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.portfolio_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'portfolio_id' field has been set.
      * @return True if the 'portfolio_id' field has been set, false otherwise.
      */
    public boolean hasPortfolioId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'portfolio_id' field.
      * @return This builder.
      */
    public com.kafmongo.kafmongo.utils.WeightStockSchema.Builder clearPortfolioId() {
      portfolio_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ticker' field.
      * @return The value.
      */
    public java.lang.CharSequence getTicker() {
      return ticker;
    }


    /**
      * Sets the value of the 'ticker' field.
      * @param value The value of 'ticker'.
      * @return This builder.
      */
    public com.kafmongo.kafmongo.utils.WeightStockSchema.Builder setTicker(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.ticker = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ticker' field has been set.
      * @return True if the 'ticker' field has been set, false otherwise.
      */
    public boolean hasTicker() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ticker' field.
      * @return This builder.
      */
    public com.kafmongo.kafmongo.utils.WeightStockSchema.Builder clearTicker() {
      ticker = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'weight' field.
      * @return The value.
      */
    public java.lang.CharSequence getWeight() {
      return weight;
    }


    /**
      * Sets the value of the 'weight' field.
      * @param value The value of 'weight'.
      * @return This builder.
      */
    public com.kafmongo.kafmongo.utils.WeightStockSchema.Builder setWeight(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.weight = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'weight' field has been set.
      * @return True if the 'weight' field has been set, false otherwise.
      */
    public boolean hasWeight() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'weight' field.
      * @return This builder.
      */
    public com.kafmongo.kafmongo.utils.WeightStockSchema.Builder clearWeight() {
      weight = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public WeightStockSchema build() {
      try {
        WeightStockSchema record = new WeightStockSchema();
        record.time = fieldSetFlags()[0] ? this.time : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.portfolio_id = fieldSetFlags()[1] ? this.portfolio_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.ticker = fieldSetFlags()[2] ? this.ticker : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.weight = fieldSetFlags()[3] ? this.weight : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<WeightStockSchema>
    WRITER$ = (org.apache.avro.io.DatumWriter<WeightStockSchema>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<WeightStockSchema>
    READER$ = (org.apache.avro.io.DatumReader<WeightStockSchema>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.time);

    out.writeString(this.portfolio_id);

    out.writeString(this.ticker);

    out.writeString(this.weight);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.time = in.readString(this.time instanceof Utf8 ? (Utf8)this.time : null);

      this.portfolio_id = in.readString(this.portfolio_id instanceof Utf8 ? (Utf8)this.portfolio_id : null);

      this.ticker = in.readString(this.ticker instanceof Utf8 ? (Utf8)this.ticker : null);

      this.weight = in.readString(this.weight instanceof Utf8 ? (Utf8)this.weight : null);

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.time = in.readString(this.time instanceof Utf8 ? (Utf8)this.time : null);
          break;

        case 1:
          this.portfolio_id = in.readString(this.portfolio_id instanceof Utf8 ? (Utf8)this.portfolio_id : null);
          break;

        case 2:
          this.ticker = in.readString(this.ticker instanceof Utf8 ? (Utf8)this.ticker : null);
          break;

        case 3:
          this.weight = in.readString(this.weight instanceof Utf8 ? (Utf8)this.weight : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










